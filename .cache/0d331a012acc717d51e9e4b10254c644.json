{"dependencies":[{"name":"D:\\paid\\shree_shyam_roadways\\package.json","includedInParent":true,"mtime":1518879300067},{"name":"D:\\paid\\shree_shyam_roadways\\node_modules\\@uirouter\\angularjs\\package.json","includedInParent":true,"mtime":1518871242882}],"generated":{"js":"/**\n * The current (or pending) State Parameters\n *\n * An injectable global **Service Object** which holds the state parameters for the latest **SUCCESSFUL** transition.\n *\n * The values are not updated until *after* a `Transition` successfully completes.\n *\n * **Also:** an injectable **Per-Transition Object** object which holds the pending state parameters for the pending `Transition` currently running.\n *\n * ### Deprecation warning:\n *\n * The value injected for `$stateParams` is different depending on where it is injected.\n *\n * - When injected into an angular service, the object injected is the global **Service Object** with the parameter values for the latest successful `Transition`.\n * - When injected into transition hooks, resolves, or view controllers, the object is the **Per-Transition Object** with the parameter values for the running `Transition`.\n *\n * Because of these confusing details, this service is deprecated.\n *\n * ### Instead of using the global `$stateParams` service object,\n * inject [[$uiRouterGlobals]] and use [[UIRouterGlobals.params]]\n *\n * ```js\n * MyService.$inject = ['$uiRouterGlobals'];\n * function MyService($uiRouterGlobals) {\n *   return {\n *     paramValues: function () {\n *       return $uiRouterGlobals.params;\n *     }\n *   }\n * }\n * ```\n *\n * ### Instead of using the per-transition `$stateParams` object,\n * inject the current `Transition` (as [[$transition$]]) and use [[Transition.params]]\n *\n * ```js\n * MyController.$inject = ['$transition$'];\n * function MyController($transition$) {\n *   var username = $transition$.params().username;\n *   // .. do something with username\n * }\n * ```\n *\n * ---\n *\n * This object can be injected into other services.\n *\n * #### Deprecated Example:\n * ```js\n * SomeService.$inject = ['$http', '$stateParams'];\n * function SomeService($http, $stateParams) {\n *   return {\n *     getUser: function() {\n *       return $http.get('/api/users/' + $stateParams.username);\n *     }\n *   }\n * };\n * angular.service('SomeService', SomeService);\n * ```\n * @deprecated\n */\nvar $stateParams;\n/**\n * Global UI-Router variables\n *\n * The router global state as a **Service Object** (injectable during runtime).\n *\n * This object contains globals such as the current state and current parameter values.\n */\nvar $uiRouterGlobals;\n/**\n * The UI-Router instance\n *\n * The [[UIRouter]] singleton (the router instance) as a **Service Object** (injectable during runtime).\n *\n * This object is the UI-Router singleton instance, created by angular dependency injection during application bootstrap.\n * It has references to the other UI-Router services\n *\n * #### Note: This object is also exposed as [[$uiRouterProvider]] for injection during angular config time.\n */\nvar $uiRouter;\n/**\n * The UI-Router instance\n *\n * The [[UIRouter]] singleton (the router instance) as a **Provider Object** (injectable during config phase).\n *\n * This object is the UI-Router singleton instance, created by angular dependency injection during application bootstrap.\n * It has references to the other UI-Router services\n *\n * #### Note: This object is also exposed as [[$uiRouter]] for injection during runtime.\n */\nvar $uiRouterProvider;\n/**\n * Transition debug/tracing\n *\n * The [[Trace]] singleton as a **Service Object** (injectable during runtime).\n *\n * Enables or disables Transition tracing which can help to debug issues.\n */\nvar $trace;\n/**\n * The Transition Service\n *\n * The [[TransitionService]] singleton as a **Service Object** (injectable during runtime).\n *\n * This angular service exposes the [[TransitionService]] singleton, which is primarily\n * used to register global transition hooks.\n *\n * #### Note: This object is also exposed as [[$transitionsProvider]] for injection during the config phase.\n */\nvar $transitions;\n/**\n * The Transition Service\n *\n * The [[TransitionService]] singleton as a **Provider Object** (injectable during config phase)\n *\n * This angular service exposes the [[TransitionService]] singleton, which is primarily\n * used to register global transition hooks.\n *\n * #### Note: This object is also exposed as [[$transitions]] for injection during runtime.\n */\nvar $transitionsProvider;\n/**\n * The current [[Transition]] object\n *\n * The current [[Transition]] object as a **Per-Transition Object** (injectable into Resolve, Hooks, Controllers)\n *\n * This object returns information about the current transition, including:\n *\n * - To/from states\n * - To/from parameters\n * - Transition options\n * - States being entered, exited, and retained\n * - Resolve data\n * - A Promise for the transition\n * - Any transition failure information\n * - An injector for both Service and Per-Transition Objects\n */\nvar $transition$;\n/**\n * The State Service\n *\n * The [[StateService]] singleton as a **Service Object** (injectable during runtime).\n *\n * This service used to manage and query information on registered states.\n * It exposes state related APIs including:\n *\n * - Start a [[Transition]]\n * - Imperatively lazy load states\n * - Check if a state is currently active\n * - Look up states by name\n * - Build URLs for a state+parameters\n * - Configure the global Transition error handler\n *\n * This angular service exposes the [[StateService]] singleton.\n */\nvar $state;\n/**\n * The State Registry\n *\n * The [[StateRegistry]] singleton as a **Service Object** (injectable during runtime).\n *\n * This service is used to register/deregister states.\n * It has state registration related APIs including:\n *\n * - Register/deregister states\n * - Listen for state registration/deregistration\n * - Get states by name\n * - Add state decorators (to customize the state creation process)\n *\n * #### Note: This object is also exposed as [[$stateRegistryProvider]] for injection during the config phase.\n */\nvar $stateRegistry;\n/**\n * The State Registry\n *\n * The [[StateRegistry]] singleton as a **Provider Object** (injectable during config time).\n *\n * This service is used to register/deregister states.\n * It has state registration related APIs including:\n *\n * - Register/deregister states\n * - Listen for state registration/deregistration\n * - Get states by name\n * - Add state decorators (to customize the state creation process)\n *\n * #### Note: This object is also exposed as [[$stateRegistry]] for injection during runtime.\n */\nvar $stateRegistryProvider;\n/**\n * The View Scroll provider\n *\n * The [[UIViewScrollProvider]] as a **Provider Object** (injectable during config time).\n *\n * This angular service exposes the [[UIViewScrollProvider]] singleton and is\n * used to disable UI-Router's scroll behavior.\n */\nvar $uiViewScrollProvider;\n/**\n * The View Scroll function\n *\n * The View Scroll function as a **Service Object** (injectable during runtime).\n *\n * This is a function that scrolls an element into view.\n * The element is scrolled after a `$timeout` so the DOM has time to refresh.\n *\n * If you prefer to rely on `$anchorScroll` to scroll the view to the anchor,\n * this can be enabled by calling [[UIViewScrollProvider.useAnchorScroll]].\n *\n * Note: this function is used by the [[directives.uiView]] when the `autoscroll` expression evaluates to true.\n */\nvar $uiViewScroll;\n/**\n * The StateProvider\n *\n * An angular1-only [[StateProvider]] as a **Provider Object** (injectable during config time).\n *\n * This angular service exposes the [[StateProvider]] singleton.\n *\n * The `StateProvider` is primarily used to register states or add custom state decorators.\n *\n * ##### Note: This provider is a ng1 vestige.\n * It is a passthrough to [[$stateRegistry]] and [[$state]].\n */\nvar $stateProvider;\n/**\n * The URL Service Provider\n *\n * The [[UrlService]] singleton as a **Provider Object** (injectable during the angular config phase).\n *\n * A service used to configure and interact with the URL.\n * It has URL related APIs including:\n *\n * - register custom Parameter types `UrlService.config.type` ([[UrlConfigApi.type]])\n * - add URL rules: `UrlService.rules.when` ([[UrlRulesApi.when]])\n * - configure behavior when no url matches: `UrlService.rules.otherwise` ([[UrlRulesApi.otherwise]])\n * - delay initial URL synchronization [[UrlService.deferIntercept]].\n * - get or set the current url: [[UrlService.url]]\n *\n * ##### Note: This service can also be injected during runtime as [[$urlService]].\n */\nvar $urlServiceProvider;\n/**\n * The URL Service\n *\n * The [[UrlService]] singleton as a **Service Object** (injectable during runtime).\n *\n * Note: This service can also be injected during the config phase as [[$urlServiceProvider]].\n *\n * Used to configure the URL.\n * It has URL related APIs including:\n *\n * - register custom Parameter types `UrlService.config.type` ([[UrlConfigApi.type]])\n * - add URL rules: `UrlService.rules.when` ([[UrlRulesApi.when]])\n * - configure behavior when no url matches: `UrlService.rules.otherwise` ([[UrlRulesApi.otherwise]])\n * - delay initial URL synchronization [[UrlService.deferIntercept]].\n * - get or set the current url: [[UrlService.url]]\n *\n * ##### Note: This service can also be injected during the config phase as [[$urlServiceProvider]].\n */\nvar $urlService;\n/**\n * The URL Router Provider\n *\n * ### Deprecation warning: This object is now considered internal. Use [[$urlServiceProvider]] instead.\n *\n * The [[UrlRouter]] singleton as a **Provider Object** (injectable during config time).\n *\n * #### Note: This object is also exposed as [[$urlRouter]] for injection during runtime.\n *\n * @deprecated\n */\nvar $urlRouterProvider;\n/**\n * The Url Router\n *\n * ### Deprecation warning: This object is now considered internal. Use [[$urlService]] instead.\n *\n * The [[UrlRouter]] singleton as a **Service Object** (injectable during runtime).\n *\n * #### Note: This object is also exposed as [[$urlRouterProvider]] for injection during angular config time.\n *\n * @deprecated\n */\nvar $urlRouter;\n/**\n * The URL Matcher Factory\n *\n * ### Deprecation warning: This object is now considered internal. Use [[$urlService]] instead.\n *\n * The [[UrlMatcherFactory]] singleton as a **Service Object** (injectable during runtime).\n *\n * This service is used to set url mapping options, define custom parameter types, and create [[UrlMatcher]] objects.\n *\n * #### Note: This object is also exposed as [[$urlMatcherFactoryProvider]] for injection during angular config time.\n *\n * @deprecated\n */\nvar $urlMatcherFactory;\n/**\n * The URL Matcher Factory\n *\n * ### Deprecation warning: This object is now considered internal. Use [[$urlService]] instead.\n *\n * The [[UrlMatcherFactory]] singleton as a **Provider Object** (injectable during config time).\n *\n * This service is used to set url mapping options, define custom parameter types, and create [[UrlMatcher]] objects.\n *\n * #### Note: This object is also exposed as [[$urlMatcherFactory]] for injection during runtime.\n *\n * @deprecated\n */\nvar $urlMatcherFactoryProvider;\n//# sourceMappingURL=injectables.js.map","map":{"mappings":[{"generated":{"line":1,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":1,"column":0}},{"generated":{"line":62,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":62,"column":0}},{"name":"$stateParams","generated":{"line":62,"column":4},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":62,"column":4}},{"generated":{"line":62,"column":16},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":62,"column":0}},{"generated":{"line":63,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":63,"column":0}},{"generated":{"line":70,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":70,"column":0}},{"name":"$uiRouterGlobals","generated":{"line":70,"column":4},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":70,"column":4}},{"generated":{"line":70,"column":20},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":70,"column":0}},{"generated":{"line":71,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":71,"column":0}},{"generated":{"line":81,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":81,"column":0}},{"name":"$uiRouter","generated":{"line":81,"column":4},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":81,"column":4}},{"generated":{"line":81,"column":13},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":81,"column":0}},{"generated":{"line":82,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":82,"column":0}},{"generated":{"line":92,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":92,"column":0}},{"name":"$uiRouterProvider","generated":{"line":92,"column":4},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":92,"column":4}},{"generated":{"line":92,"column":21},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":92,"column":0}},{"generated":{"line":93,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":93,"column":0}},{"generated":{"line":100,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":100,"column":0}},{"name":"$trace","generated":{"line":100,"column":4},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":100,"column":4}},{"generated":{"line":100,"column":10},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":100,"column":0}},{"generated":{"line":101,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":101,"column":0}},{"generated":{"line":111,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":111,"column":0}},{"name":"$transitions","generated":{"line":111,"column":4},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":111,"column":4}},{"generated":{"line":111,"column":16},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":111,"column":0}},{"generated":{"line":112,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":112,"column":0}},{"generated":{"line":122,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":122,"column":0}},{"name":"$transitionsProvider","generated":{"line":122,"column":4},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":122,"column":4}},{"generated":{"line":122,"column":24},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":122,"column":0}},{"generated":{"line":123,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":123,"column":0}},{"generated":{"line":139,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":139,"column":0}},{"name":"$transition$","generated":{"line":139,"column":4},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":139,"column":4}},{"generated":{"line":139,"column":16},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":139,"column":0}},{"generated":{"line":140,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":140,"column":0}},{"generated":{"line":157,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":157,"column":0}},{"name":"$state","generated":{"line":157,"column":4},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":157,"column":4}},{"generated":{"line":157,"column":10},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":157,"column":0}},{"generated":{"line":158,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":158,"column":0}},{"generated":{"line":173,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":173,"column":0}},{"name":"$stateRegistry","generated":{"line":173,"column":4},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":173,"column":4}},{"generated":{"line":173,"column":18},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":173,"column":0}},{"generated":{"line":174,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":174,"column":0}},{"generated":{"line":189,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":189,"column":0}},{"name":"$stateRegistryProvider","generated":{"line":189,"column":4},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":189,"column":4}},{"generated":{"line":189,"column":26},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":189,"column":0}},{"generated":{"line":190,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":190,"column":0}},{"generated":{"line":198,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":198,"column":0}},{"name":"$uiViewScrollProvider","generated":{"line":198,"column":4},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":198,"column":4}},{"generated":{"line":198,"column":25},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":198,"column":0}},{"generated":{"line":199,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":199,"column":0}},{"generated":{"line":212,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":212,"column":0}},{"name":"$uiViewScroll","generated":{"line":212,"column":4},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":212,"column":4}},{"generated":{"line":212,"column":17},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":212,"column":0}},{"generated":{"line":213,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":213,"column":0}},{"generated":{"line":225,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":225,"column":0}},{"name":"$stateProvider","generated":{"line":225,"column":4},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":225,"column":4}},{"generated":{"line":225,"column":18},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":225,"column":0}},{"generated":{"line":226,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":226,"column":0}},{"generated":{"line":242,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":242,"column":0}},{"name":"$urlServiceProvider","generated":{"line":242,"column":4},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":242,"column":4}},{"generated":{"line":242,"column":23},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":242,"column":0}},{"generated":{"line":243,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":243,"column":0}},{"generated":{"line":261,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":261,"column":0}},{"name":"$urlService","generated":{"line":261,"column":4},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":261,"column":4}},{"generated":{"line":261,"column":15},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":261,"column":0}},{"generated":{"line":262,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":262,"column":0}},{"generated":{"line":273,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":273,"column":0}},{"name":"$urlRouterProvider","generated":{"line":273,"column":4},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":273,"column":4}},{"generated":{"line":273,"column":22},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":273,"column":0}},{"generated":{"line":274,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":274,"column":0}},{"generated":{"line":285,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":285,"column":0}},{"name":"$urlRouter","generated":{"line":285,"column":4},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":285,"column":4}},{"generated":{"line":285,"column":14},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":285,"column":0}},{"generated":{"line":286,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":286,"column":0}},{"generated":{"line":299,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":299,"column":0}},{"name":"$urlMatcherFactory","generated":{"line":299,"column":4},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":299,"column":4}},{"generated":{"line":299,"column":22},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":299,"column":0}},{"generated":{"line":300,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":300,"column":0}},{"generated":{"line":313,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":313,"column":0}},{"name":"$urlMatcherFactoryProvider","generated":{"line":313,"column":4},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":313,"column":4}},{"generated":{"line":313,"column":30},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":313,"column":0}},{"generated":{"line":314,"column":0},"source":"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js","original":{"line":314,"column":0}}],"sources":{"..\\node_modules\\@uirouter\\angularjs\\lib-esm\\injectables.js":"/**\n * The current (or pending) State Parameters\n *\n * An injectable global **Service Object** which holds the state parameters for the latest **SUCCESSFUL** transition.\n *\n * The values are not updated until *after* a `Transition` successfully completes.\n *\n * **Also:** an injectable **Per-Transition Object** object which holds the pending state parameters for the pending `Transition` currently running.\n *\n * ### Deprecation warning:\n *\n * The value injected for `$stateParams` is different depending on where it is injected.\n *\n * - When injected into an angular service, the object injected is the global **Service Object** with the parameter values for the latest successful `Transition`.\n * - When injected into transition hooks, resolves, or view controllers, the object is the **Per-Transition Object** with the parameter values for the running `Transition`.\n *\n * Because of these confusing details, this service is deprecated.\n *\n * ### Instead of using the global `$stateParams` service object,\n * inject [[$uiRouterGlobals]] and use [[UIRouterGlobals.params]]\n *\n * ```js\n * MyService.$inject = ['$uiRouterGlobals'];\n * function MyService($uiRouterGlobals) {\n *   return {\n *     paramValues: function () {\n *       return $uiRouterGlobals.params;\n *     }\n *   }\n * }\n * ```\n *\n * ### Instead of using the per-transition `$stateParams` object,\n * inject the current `Transition` (as [[$transition$]]) and use [[Transition.params]]\n *\n * ```js\n * MyController.$inject = ['$transition$'];\n * function MyController($transition$) {\n *   var username = $transition$.params().username;\n *   // .. do something with username\n * }\n * ```\n *\n * ---\n *\n * This object can be injected into other services.\n *\n * #### Deprecated Example:\n * ```js\n * SomeService.$inject = ['$http', '$stateParams'];\n * function SomeService($http, $stateParams) {\n *   return {\n *     getUser: function() {\n *       return $http.get('/api/users/' + $stateParams.username);\n *     }\n *   }\n * };\n * angular.service('SomeService', SomeService);\n * ```\n * @deprecated\n */\nvar $stateParams;\n/**\n * Global UI-Router variables\n *\n * The router global state as a **Service Object** (injectable during runtime).\n *\n * This object contains globals such as the current state and current parameter values.\n */\nvar $uiRouterGlobals;\n/**\n * The UI-Router instance\n *\n * The [[UIRouter]] singleton (the router instance) as a **Service Object** (injectable during runtime).\n *\n * This object is the UI-Router singleton instance, created by angular dependency injection during application bootstrap.\n * It has references to the other UI-Router services\n *\n * #### Note: This object is also exposed as [[$uiRouterProvider]] for injection during angular config time.\n */\nvar $uiRouter;\n/**\n * The UI-Router instance\n *\n * The [[UIRouter]] singleton (the router instance) as a **Provider Object** (injectable during config phase).\n *\n * This object is the UI-Router singleton instance, created by angular dependency injection during application bootstrap.\n * It has references to the other UI-Router services\n *\n * #### Note: This object is also exposed as [[$uiRouter]] for injection during runtime.\n */\nvar $uiRouterProvider;\n/**\n * Transition debug/tracing\n *\n * The [[Trace]] singleton as a **Service Object** (injectable during runtime).\n *\n * Enables or disables Transition tracing which can help to debug issues.\n */\nvar $trace;\n/**\n * The Transition Service\n *\n * The [[TransitionService]] singleton as a **Service Object** (injectable during runtime).\n *\n * This angular service exposes the [[TransitionService]] singleton, which is primarily\n * used to register global transition hooks.\n *\n * #### Note: This object is also exposed as [[$transitionsProvider]] for injection during the config phase.\n */\nvar $transitions;\n/**\n * The Transition Service\n *\n * The [[TransitionService]] singleton as a **Provider Object** (injectable during config phase)\n *\n * This angular service exposes the [[TransitionService]] singleton, which is primarily\n * used to register global transition hooks.\n *\n * #### Note: This object is also exposed as [[$transitions]] for injection during runtime.\n */\nvar $transitionsProvider;\n/**\n * The current [[Transition]] object\n *\n * The current [[Transition]] object as a **Per-Transition Object** (injectable into Resolve, Hooks, Controllers)\n *\n * This object returns information about the current transition, including:\n *\n * - To/from states\n * - To/from parameters\n * - Transition options\n * - States being entered, exited, and retained\n * - Resolve data\n * - A Promise for the transition\n * - Any transition failure information\n * - An injector for both Service and Per-Transition Objects\n */\nvar $transition$;\n/**\n * The State Service\n *\n * The [[StateService]] singleton as a **Service Object** (injectable during runtime).\n *\n * This service used to manage and query information on registered states.\n * It exposes state related APIs including:\n *\n * - Start a [[Transition]]\n * - Imperatively lazy load states\n * - Check if a state is currently active\n * - Look up states by name\n * - Build URLs for a state+parameters\n * - Configure the global Transition error handler\n *\n * This angular service exposes the [[StateService]] singleton.\n */\nvar $state;\n/**\n * The State Registry\n *\n * The [[StateRegistry]] singleton as a **Service Object** (injectable during runtime).\n *\n * This service is used to register/deregister states.\n * It has state registration related APIs including:\n *\n * - Register/deregister states\n * - Listen for state registration/deregistration\n * - Get states by name\n * - Add state decorators (to customize the state creation process)\n *\n * #### Note: This object is also exposed as [[$stateRegistryProvider]] for injection during the config phase.\n */\nvar $stateRegistry;\n/**\n * The State Registry\n *\n * The [[StateRegistry]] singleton as a **Provider Object** (injectable during config time).\n *\n * This service is used to register/deregister states.\n * It has state registration related APIs including:\n *\n * - Register/deregister states\n * - Listen for state registration/deregistration\n * - Get states by name\n * - Add state decorators (to customize the state creation process)\n *\n * #### Note: This object is also exposed as [[$stateRegistry]] for injection during runtime.\n */\nvar $stateRegistryProvider;\n/**\n * The View Scroll provider\n *\n * The [[UIViewScrollProvider]] as a **Provider Object** (injectable during config time).\n *\n * This angular service exposes the [[UIViewScrollProvider]] singleton and is\n * used to disable UI-Router's scroll behavior.\n */\nvar $uiViewScrollProvider;\n/**\n * The View Scroll function\n *\n * The View Scroll function as a **Service Object** (injectable during runtime).\n *\n * This is a function that scrolls an element into view.\n * The element is scrolled after a `$timeout` so the DOM has time to refresh.\n *\n * If you prefer to rely on `$anchorScroll` to scroll the view to the anchor,\n * this can be enabled by calling [[UIViewScrollProvider.useAnchorScroll]].\n *\n * Note: this function is used by the [[directives.uiView]] when the `autoscroll` expression evaluates to true.\n */\nvar $uiViewScroll;\n/**\n * The StateProvider\n *\n * An angular1-only [[StateProvider]] as a **Provider Object** (injectable during config time).\n *\n * This angular service exposes the [[StateProvider]] singleton.\n *\n * The `StateProvider` is primarily used to register states or add custom state decorators.\n *\n * ##### Note: This provider is a ng1 vestige.\n * It is a passthrough to [[$stateRegistry]] and [[$state]].\n */\nvar $stateProvider;\n/**\n * The URL Service Provider\n *\n * The [[UrlService]] singleton as a **Provider Object** (injectable during the angular config phase).\n *\n * A service used to configure and interact with the URL.\n * It has URL related APIs including:\n *\n * - register custom Parameter types `UrlService.config.type` ([[UrlConfigApi.type]])\n * - add URL rules: `UrlService.rules.when` ([[UrlRulesApi.when]])\n * - configure behavior when no url matches: `UrlService.rules.otherwise` ([[UrlRulesApi.otherwise]])\n * - delay initial URL synchronization [[UrlService.deferIntercept]].\n * - get or set the current url: [[UrlService.url]]\n *\n * ##### Note: This service can also be injected during runtime as [[$urlService]].\n */\nvar $urlServiceProvider;\n/**\n * The URL Service\n *\n * The [[UrlService]] singleton as a **Service Object** (injectable during runtime).\n *\n * Note: This service can also be injected during the config phase as [[$urlServiceProvider]].\n *\n * Used to configure the URL.\n * It has URL related APIs including:\n *\n * - register custom Parameter types `UrlService.config.type` ([[UrlConfigApi.type]])\n * - add URL rules: `UrlService.rules.when` ([[UrlRulesApi.when]])\n * - configure behavior when no url matches: `UrlService.rules.otherwise` ([[UrlRulesApi.otherwise]])\n * - delay initial URL synchronization [[UrlService.deferIntercept]].\n * - get or set the current url: [[UrlService.url]]\n *\n * ##### Note: This service can also be injected during the config phase as [[$urlServiceProvider]].\n */\nvar $urlService;\n/**\n * The URL Router Provider\n *\n * ### Deprecation warning: This object is now considered internal. Use [[$urlServiceProvider]] instead.\n *\n * The [[UrlRouter]] singleton as a **Provider Object** (injectable during config time).\n *\n * #### Note: This object is also exposed as [[$urlRouter]] for injection during runtime.\n *\n * @deprecated\n */\nvar $urlRouterProvider;\n/**\n * The Url Router\n *\n * ### Deprecation warning: This object is now considered internal. Use [[$urlService]] instead.\n *\n * The [[UrlRouter]] singleton as a **Service Object** (injectable during runtime).\n *\n * #### Note: This object is also exposed as [[$urlRouterProvider]] for injection during angular config time.\n *\n * @deprecated\n */\nvar $urlRouter;\n/**\n * The URL Matcher Factory\n *\n * ### Deprecation warning: This object is now considered internal. Use [[$urlService]] instead.\n *\n * The [[UrlMatcherFactory]] singleton as a **Service Object** (injectable during runtime).\n *\n * This service is used to set url mapping options, define custom parameter types, and create [[UrlMatcher]] objects.\n *\n * #### Note: This object is also exposed as [[$urlMatcherFactoryProvider]] for injection during angular config time.\n *\n * @deprecated\n */\nvar $urlMatcherFactory;\n/**\n * The URL Matcher Factory\n *\n * ### Deprecation warning: This object is now considered internal. Use [[$urlService]] instead.\n *\n * The [[UrlMatcherFactory]] singleton as a **Provider Object** (injectable during config time).\n *\n * This service is used to set url mapping options, define custom parameter types, and create [[UrlMatcher]] objects.\n *\n * #### Note: This object is also exposed as [[$urlMatcherFactory]] for injection during runtime.\n *\n * @deprecated\n */\nvar $urlMatcherFactoryProvider;\n//# sourceMappingURL=injectables.js.map"},"lineCount":null}},"hash":"f66f333b693011580a43a55f5918501a","cacheData":{"env":{}}}